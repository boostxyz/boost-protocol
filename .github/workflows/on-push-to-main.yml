name: Main
on:
  push:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  verify:
    name: Verify
    uses: ./.github/workflows/verify.yml
    secrets: inherit

  docs:
    name: Deploy SDK Typedoc
    needs: verify
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Install dependencies
        uses: ./.github/actions/install-dependencies
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

  changesets:
    name: Changesets
    needs: verify
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Install dependencies
        uses: ./.github/actions/install-dependencies
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Version Pull Request
        uses: changesets/action@v1
        with:
          version: pnpm changeset:version
          commit: "chore: version package"
          title: "chore: version package"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    name: Release
    needs: changesets
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 2
      - name: Install dependencies
        uses: ./.github/actions/install-dependencies
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        run: npx turbo build --cache-dir=".cache"

      - name: Create .npmrc
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc

      - name: Publish to NPM
        uses: changesets/action@v1
        with:
          publish: pnpm publish-packages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN }}

  # TODO: do we want this?
  # docs:
  #   needs: check
  #   name: Deploy Docs
  #   runs-on: ubuntu-latest

  #   permissions:
  #     contents: write
  #     pages: write
  #     id-token: write

  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         submodules: recursive

  #     - name: Install Foundry
  #       uses: foundry-rs/foundry-toolchain@v1
  #       with:
  #         version: nightly

  #     - name: Build Documentation (mdBook)
  #       working-directory: ./packages/evm
  #       run: forge doc --build

  #     - name: Publish Documentation
  #       uses: JamesIves/github-pages-deploy-action@v4
  #       with:
  #         folder: ./packages/evm/docs/book
  #         token: ${{ secrets.GITHUB_TOKEN }}
