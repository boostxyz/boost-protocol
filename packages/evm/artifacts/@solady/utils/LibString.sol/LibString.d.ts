// This file was autogenerated by hardhat-viem, do not edit it.
// prettier-ignore
// tslint:disable
// eslint-disable

import type { Address } from "viem";
import type { GetContractReturnType } from "@nomicfoundation/hardhat-viem/types";
import "@nomicfoundation/hardhat-viem/types";

export interface LibString$Type {
  "_format": "hh-sol-artifact-1",
  "contractName": "LibString",
  "sourceName": "@solady/utils/LibString.sol",
  "abi": [
    {
      "inputs": [],
      "name": "HexLengthInsufficient",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TooBigForSmallString",
      "type": "error"
    }
  ],
  "bytecode": "0x6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220d91b6d503cc3e113ad0f1da3205ab19c545773a65b6a734db62a9fecfe23610264736f6c63430008190033",
  "deployedBytecode": "0x730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220d91b6d503cc3e113ad0f1da3205ab19c545773a65b6a734db62a9fecfe23610264736f6c63430008190033",
  "linkReferences": {},
  "deployedLinkReferences": {}
}

declare module "@nomicfoundation/hardhat-viem/types" {
  export function deployContract(
    contractName: "LibString",
    constructorArgs?: [],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<LibString$Type["abi"]>>;
  export function deployContract(
    contractName: "@solady/utils/LibString.sol:LibString",
    constructorArgs?: [],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<LibString$Type["abi"]>>;

  export function sendDeploymentTransaction(
    contractName: "LibString",
    constructorArgs?: [],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<LibString$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;
  export function sendDeploymentTransaction(
    contractName: "@solady/utils/LibString.sol:LibString",
    constructorArgs?: [],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<LibString$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;

  export function getContractAt(
    contractName: "LibString",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<LibString$Type["abi"]>>;
  export function getContractAt(
    contractName: "@solady/utils/LibString.sol:LibString",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<LibString$Type["abi"]>>;
}
